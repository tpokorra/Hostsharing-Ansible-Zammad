---
- hosts: zammad
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    ansible_remote_tmp: ~/.ansible/tmp

  tasks:
  - name: Create user, domain and database
    import_tasks: tasks/hs_basis.yml

  #################################
  ## create directories
  #################################
  - name: create directory etc
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc"
      state: directory
  - name: create directory var/tmp
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory
  - name: create directory var/run
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/run"
      state: directory

  #################################
  ## install requirements
  #################################
  - name: Install node.js
    import_tasks: tasks/hs_nodejs.yml

  - name: Install ruby
    import_tasks: tasks/hs_ruby.yml

  ##################################
  ## install zammad
  ##################################

  - name: Check for git working tree
    become: yes
    become_user: "{{pac}}-{{user}}"
    stat:
      path: /home/pacs/{{pac}}/users/{{user}}/dolibarr
    register: workingtree
  - name: get zammad repo
    become: yes
    become_user: "{{pac}}-{{user}}"
    git:
      repo: https://github.com/zammad/zammad.git
      version: "stable"
      dest: /home/pacs/{{pac}}/users/{{user}}/zammad
    when: not workingtree.stat.exists

  - name: install ruby packages
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      . ~/.profile
      bundle config set without "test development mysql" || exit -1
      bundle install || exit -1
      touch ~/.ansible.rubypackages
    args:
        executable: /bin/bash
        chdir: "/home/pacs/{{pac}}/users/{{user}}/zammad"
        creates: /home/pacs/{{pac}}/users/{{user}}/.ansible.rubypackages

  ##################################
  ## configuration
  ##################################

  - name: upload database configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/zammad/config/database.yml" src="templates/database.yml" mode=0600

  ######################
  ## initialise instance
  ######################

  - name: initialise instance
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      . ~/.profile
      export RAILS_ENV="production"
      rake db:migrate || exit -1
      rake db:seed || exit -1
      rails r "Locale.sync" || exit -1
      rails r "Translation.sync" || exit -1
      rake assets:precompile || exit -1
      touch ~/.ansible.dbinitialised
    args:
        executable: /bin/bash
        chdir: "/home/pacs/{{pac}}/users/{{user}}/zammad"
        creates: /home/pacs/{{pac}}/users/{{user}}/.ansible.dbinitialised

  ########################
  ## setup the apache site
  ########################

  - name: drop htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
       state: absent
  - name: drop app-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/app-ssl"
       state: absent
  - name: create symbolic link for htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/zammad/public"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
      state: link
  - name: create symbolic link for app-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/zammad"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/app-ssl"
      state: link
  - name: upload htaccess
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/.htaccess" src="templates/htaccess_domain"

  ####################################
  ## setup Elasticsearch
  ####################################

  # zammad run rails r "Setting.set('es_url', 'http://localhost:9200')"
  # zammad run rake zammad:searchindex:rebuild

  ####################################
  ## install cron jobs
  ####################################
  #- name: start monit as cronjob
  #  become: yes
  #  become_user: "{{pac}}-{{user}}"
  #  cron:
  #    name: "start monit at reboot"
  #    special_time: reboot
  #    job: rm -f $HOME/var/run/* && /usr/bin/monit -c "$HOME/.monitrc"

  ##############################################
  ## start services via monit
  ##############################################
  #- name: start monit
  #  become: yes
  #  become_user: "{{pac}}-{{user}}"
  #  shell: |
  #    /usr/bin/monit -c ".monitrc"
  #  args:
  #    executable: /bin/bash
  #    chdir: "/home/pacs/{{pac}}/users/{{user}}/"
  #    creates: "/home/pacs/{{pac}}/users/{{user}}/var/run/monit.id"

